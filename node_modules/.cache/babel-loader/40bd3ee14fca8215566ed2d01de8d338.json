{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Board from'./Board';var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);function Game(props){var _this;_classCallCheck(this,Game);_this=_possibleConstructorReturn(this,_getPrototypeOf(Game).call(this,props));_this.state={xIsNext:true,stepNumber:0,history:[{squares:Array(9).fill(null)}],scores:{X:0,O:0},winner:{player:null,line:null},gameHistory:null};_this.setGameHistory();return _this;}_createClass(Game,[{key:\"jumpTo\",value:function jumpTo(step){this.setState({stepNumber:step,xIsNext:step%2===0,winner:{player:null,line:null}});}},{key:\"updateScore\",value:function updateScore(winner,winningline){var scoreHistory=this.state.scores;var x_scores=scoreHistory['X'];var y_scores=scoreHistory['O'];if(winner==='X'){x_scores=scoreHistory['X']+1;}else{y_scores=scoreHistory['O']+1;}this.setState({scores:{X:x_scores,O:y_scores},winner:{player:winner,line:winningline}});}},{key:\"checkForWinner\",value:function checkForWinner(squares){// Possible winning combinations\nvar possibleCombinations=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];// Iterate every combination to see if there is a match\nfor(var i=0;i<possibleCombinations.length;i+=1){var _possibleCombinations=_slicedToArray(possibleCombinations[i],3),a=_possibleCombinations[0],b=_possibleCombinations[1],c=_possibleCombinations[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){this.updateScore(squares[a],[a,b,c]);return{player:squares[a],line:[a,b,c]};}}return null;}},{key:\"handleClick\",value:function handleClick(i){var history=this.state.history.slice(0,this.state.stepNumber+1);var current=history[history.length-1];var squares=current.squares.slice();var winner=this.state.winner;if(winner.player||squares[i]){return;}squares[i]=this.state.xIsNext?'X':'O';this.setState({history:history.concat({squares:squares}),xIsNext:!this.state.xIsNext,stepNumber:history.length});this.checkForWinner(squares);}},{key:\"resetScore\",value:function resetScore(){this.setState({scores:{X:0,O:0}});}},{key:\"resetGame\",value:function resetGame(){this.setState({xIsNext:true,stepNumber:0,history:[{squares:Array(9).fill(null)}],winner:{player:null,line:null}});}},{key:\"setGameHistory\",value:function setGameHistory(){var _this2=this;return fetch('http://localhost:8080').then(function(response){return response.json();}).then(function(gameHistory){return _this2.setState({gameHistory:gameHistory});});}},{key:\"render\",value:function render(){var _this3=this;var gameHistory=this.state.gameHistory;var gameHistoryList;if(gameHistory){gameHistoryList=gameHistory.map(function(record,gameNumber){gameNumber=gameNumber+1;var desc='Player'+record['player']+' won game '+record['gameNumber'];return React.createElement(\"li\",{key:desc},desc);});}var scoreHistory=this.state.scores;var history=this.state.history;var current=history[this.state.stepNumber];var winner=this.state.winner;var moves=history.map(function(step,move){var desc='Go to move #'+move;if(move){return React.createElement(\"li\",{key:move},React.createElement(\"button\",{onClick:function onClick(){_this3.jumpTo(move);}},desc));}return null;});var status;if(winner.player){status=\"Winner: \"+winner.player;//+ \" @ \" + winner.line;\n}else if(!current.squares.includes(null)){status=\"Tie Game!\";}else{status='Next Player is '+(this.state.xIsNext?'X':'O');}var scores;scores=\"SCORES  - Player X: \"+scoreHistory['X']+\"pts,   \"+\"Player O: \"+scoreHistory['O']+'pts';return React.createElement(\"div\",{className:\"game\"},React.createElement(\"button\",{className:\"start\",onClick:function onClick(){return _this3.resetGame();}},\" Start The Game\"),React.createElement(\"div\",{className:\"game-scores\"},React.createElement(\"div\",null,scores)),React.createElement(\"button\",{disabled:!this.state.winner,onClick:function onClick(){return _this3.resetScore();}},\" Reset Scores\"),React.createElement(\"div\",{className:\"game-status\"},React.createElement(\"div\",null,status)),React.createElement(\"div\",{className:\"game-board\"},React.createElement(Board,{winningSquares:winner.player?winner.line:[],squares:current.squares,onClick:function onClick(i){return _this3.handleClick(i);}})),React.createElement(\"div\",{className:\"game-info\"},React.createElement(\"div\",null,\"Move history will appear below when game begins. Click to jump to previous moves in current Game\"),React.createElement(\"ul\",null,moves)),React.createElement(\"div\",{className:\"game-history\"},React.createElement(\"div\",null,\"Game History: \"),React.createElement(\"ul\",null,gameHistoryList)));}}]);return Game;}(Component);export{Game as default};","map":{"version":3,"sources":["C:/Users/wchan/Desktop/Personal Projects/tic-tac-toe-HomeWork/src/components/Game.js"],"names":["React","Component","Board","Game","props","state","xIsNext","stepNumber","history","squares","Array","fill","scores","X","O","winner","player","line","gameHistory","setGameHistory","step","setState","winningline","scoreHistory","x_scores","y_scores","possibleCombinations","i","length","a","b","c","updateScore","slice","current","concat","checkForWinner","fetch","then","response","json","gameHistoryList","map","record","gameNumber","desc","moves","move","jumpTo","status","includes","resetGame","resetScore","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Board from './Board';\r\n\r\nexport default class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            history: [\r\n                { squares: Array(9).fill(null) }\r\n            ],\r\n            scores: {X:0, O:0},\r\n            winner: {player: null, line: null},\r\n            gameHistory : null\r\n        }\r\n        this.setGameHistory();\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step%2)===0,\r\n            winner: {player: null, line: null}\r\n        })\r\n    }\r\n\r\n    updateScore(winner, winningline){\r\n\r\n      const scoreHistory = this.state.scores\r\n\r\n      let x_scores = scoreHistory['X']\r\n      let y_scores = scoreHistory['O']\r\n\r\n       if (winner === 'X'){\r\n        x_scores = scoreHistory['X'] + 1\r\n       } else {\r\n        y_scores = scoreHistory['O'] + 1\r\n       }\r\n\r\n       this.setState({\r\n            scores: {X: x_scores, O:y_scores},\r\n            winner: {player: winner, line: winningline}\r\n         });\r\n    }\r\n\r\n    checkForWinner(squares){\r\n      // Possible winning combinations\r\n      const possibleCombinations = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n\r\n      // Iterate every combination to see if there is a match\r\n      for (let i = 0; i < possibleCombinations.length; i += 1) {\r\n        const [a, b, c] = possibleCombinations[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n          this.updateScore(squares[a], [a, b, c]);\r\n          return { player: squares[a], line: [a, b, c] };\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = this.state.winner\r\n        if (winner.player || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        });\r\n        this.checkForWinner(squares);\r\n    }\r\n\r\n    resetScore() {\r\n      this.setState({\r\n        scores: {X:0, O:0},\r\n      })\r\n    }\r\n\r\n    resetGame() {\r\n      this.setState({\r\n        xIsNext: true,\r\n        stepNumber: 0,\r\n        history: [\r\n            { squares: Array(9).fill(null) }\r\n        ],\r\n        winner: {player: null, line: null}\r\n      })\r\n    }\r\n\r\n    setGameHistory() {\r\n      return fetch('http://localhost:8080')\r\n                    .then(response => response.json())\r\n                    .then(gameHistory => (this.setState({gameHistory: gameHistory})))\r\n    }\r\n\r\n    render() {\r\n        let gameHistory = this.state.gameHistory;\r\n        let gameHistoryList\r\n        if (gameHistory){\r\n          gameHistoryList = gameHistory.map((record, gameNumber) => {\r\n                gameNumber = gameNumber + 1\r\n                const desc = 'Player' + record['player'] + ' won game ' + record['gameNumber'];\r\n                return (\r\n                    <li key={desc}>\r\n                    {desc}\r\n                    </li>\r\n                )\r\n            })\r\n        }\r\n\r\n        const scoreHistory = this.state.scores;\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.state.winner;\r\n        const moves = history.map((step, move) => {\r\n            const desc = 'Go to move #' + move ;\r\n            if (move){\r\n              return (\r\n                  <li key={move}>\r\n                      <button onClick={() => { this.jumpTo(move) }}>\r\n                          {desc}\r\n                      </button>\r\n                  </li>\r\n              )\r\n            }\r\n            return null;\r\n        });\r\n        let status;\r\n        if (winner.player) {\r\n            status = \"Winner: \" + winner.player //+ \" @ \" + winner.line;\r\n        } else if (!current.squares.includes(null)) {\r\n            status = \"Tie Game!\";\r\n        } else {\r\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        let scores\r\n        scores = \"SCORES  - Player X: \" + scoreHistory['X'] + \"pts,   \" + \"Player O: \" + scoreHistory['O'] + 'pts'\r\n\r\n        return (\r\n            <div className=\"game\">\r\n            <button className=\"start\" onClick={() => this.resetGame()}> Start The Game</button >\r\n\r\n            <div className=\"game-scores\">\r\n                <div>{scores}</div>\r\n            </div>\r\n\r\n            <button disabled={!this.state.winner} onClick={() => this.resetScore()}> Reset Scores</button >\r\n\r\n            <div className=\"game-status\">\r\n                <div>{status}</div>\r\n            </div>\r\n\r\n                <div className=\"game-board\" >\r\n                    <Board winningSquares={winner.player ? winner.line : []}\r\n                      squares={current.squares}\r\n                      onClick={i => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                <div>Move history will appear below when game begins. Click to jump to previous moves in current Game</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n\r\n                <div className=\"game-history\">\r\n                    <div>Game History: </div>\r\n                      <ul>{gameHistoryList}</ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}