{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\src\\\\components\\\\Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0 // history: [\n      //     { squares: Array(9).fill(null) }\n      // ]\n\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    // const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    // const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      // history: history.concat({\n      //     squares: squares\n      // }),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  render() {\n    // const history = this.state.history;\n    // const current = history[this.state.stepNumber];\n    // const winner = calculateWinner(current.squares);\n    // const moves = history.map((step, move) => {\n    //     const desc = move ? 'Go to #' + move : 'Start the Game';\n    //     return (\n    //         <li key={move}>\n    //             <button onClick={() => { this.jumpTo(move) }}>\n    //                 {desc}\n    //             </button>\n    //         </li>\n    //     )\n    // });\n    let status;\n\n    if (winner) {\n      status = 'Winner is ' + winner;\n    } else {\n      status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Board, {\n      onClick: i => this.handleClick(i),\n      squares: current.squares,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, status), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/wchan/Desktop/Personal Projects/tic-tac-toe-HomeWork/src/components/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","xIsNext","stepNumber","jumpTo","step","setState","handleClick","i","squares","current","slice","winner","calculateWinner","history","length","render","status","moves","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Board from './Board';\r\n\r\nexport default class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            // history: [\r\n            //     { squares: Array(9).fill(null) }\r\n            // ]\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i) {\r\n        // const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        // const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            // history: history.concat({\r\n            //     squares: squares\r\n            // }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        // const history = this.state.history;\r\n        // const current = history[this.state.stepNumber];\r\n        // const winner = calculateWinner(current.squares);\r\n        // const moves = history.map((step, move) => {\r\n        //     const desc = move ? 'Go to #' + move : 'Start the Game';\r\n        //     return (\r\n        //         <li key={move}>\r\n        //             <button onClick={() => { this.jumpTo(move) }}>\r\n        //                 {desc}\r\n        //             </button>\r\n        //         </li>\r\n        //     )\r\n        // });\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner is ' + winner;\r\n        } else {\r\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i) => this.handleClick(i)}\r\n                        squares={current.squares} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}