{"ast":null,"code":"'use strict'; // tar -u\n\nconst hlo = require('./high-level-opt.js');\n\nconst r = require('./replace.js'); // just call tar.r with the filter and mtimeCache\n\n\nconst u = module.exports = (opt_, files, cb) => {\n  const opt = hlo(opt_);\n  if (!opt.file) throw new TypeError('file is required');\n  if (opt.gzip) throw new TypeError('cannot append to compressed archives');\n  if (!files || !Array.isArray(files) || !files.length) throw new TypeError('no files or directories specified');\n  files = Array.from(files);\n  mtimeFilter(opt);\n  return r(opt, files, cb);\n};\n\nconst mtimeFilter = opt => {\n  const filter = opt.filter;\n  if (!opt.mtimeCache) opt.mtimeCache = new Map();\n  opt.filter = filter ? (path, stat) => filter(path, stat) && !(opt.mtimeCache.get(path) > stat.mtime) : (path, stat) => !(opt.mtimeCache.get(path) > stat.mtime);\n};","map":null,"metadata":{},"sourceType":"script"}