{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\wchan\\\\Desktop\\\\Personal Projects\\\\tic-tac-toe-HomeWork\\\\src\\\\components\\\\Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat({\n        squares: squares\n      }),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to #' + move : 'Start the Game';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          this.jumpTo(move);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      //status = 'Winner is ' + winner + '!';\n      status = \"Winner: \" + winner.player + \" @ \" + winner.line;\n      $(\"#square\").addClass(\"disabledbutton\");\n    } else if (!current.squares.includes(null)) {\n      status = \"Tie Game!\";\n    } else {\n      status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, status)), React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Board, {\n      winningSquares: winner ? winner.line : [],\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // for (let i = 0; i < lines.length; i++) {\n  //     const [a, b, c] = lines[i];\n  //     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n  //         return squares[a];\n  //     }\n  // }\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/wchan/Desktop/Personal Projects/tic-tac-toe-HomeWork/src/components/Game.js"],"names":["React","Component","Board","Game","constructor","props","state","xIsNext","stepNumber","history","squares","Array","fill","jumpTo","step","setState","handleClick","i","slice","current","length","winner","calculateWinner","concat","render","moves","map","move","desc","status","player","line","$","addClass","includes","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Board from './Board';\r\n\r\nexport default class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            history: [\r\n                { squares: Array(9).fill(null) }\r\n            ]\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to #' + move : 'Start the Game';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => { this.jumpTo(move) }}>\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            )\r\n        });\r\n        let status;\r\n        if (winner) {\r\n            //status = 'Winner is ' + winner + '!';\r\n            status = \"Winner: \" + winner.player + \" @ \" + winner.line;\r\n            $(\"#square\").addClass(\"disabledbutton\");\r\n        } else if (!current.squares.includes(null)) {\r\n            status = \"Tie Game!\";\r\n        } else {\r\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"game\">\r\n            <div className=\"game-status\">\r\n                <div>{status}</div>\r\n            </div>\r\n\r\n                <div className=\"game-board\">\r\n                    <Board winningSquares={winner ? winner.line : []}\r\n                      squares={current.squares}\r\n                      onClick={i => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    // for (let i = 0; i < lines.length; i++) {\r\n    //     const [a, b, c] = lines[i];\r\n    //     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n    //         return squares[a];\r\n    //     }\r\n    // }\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n          return { player: squares[a], line: [a, b, c] };\r\n        }\r\n      }\r\n\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}